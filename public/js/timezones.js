/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./js/application.js":
/*!***************************!*\
  !*** ./js/application.js ***!
  \***************************/
/***/ (() => {

eval("/*\n\n  Timezones\n\n*/\n\n// --------------------------------------------------------------------------------------------------------------\n\n// set up a master object\nvar A17 = window.A17 || {};\n\n// set up some objects within the master one, to hold my Helpers and behaviors\nA17.Behaviors = {};\nA17.Helpers = {};\nA17.Functions = {};\nA17.currentMediaQuery = 'large';\nA17.activeBehaviors = {};\nA17.settings = {};\nA17.guessedUserTimeZone = (window.Intl) ? Intl.DateTimeFormat().resolvedOptions().timeZone : 'UTC';\nA17.guessedUserUSA = /Adak|Anchorage|Boise|Chicago|Denver|Detroit|Indiana|Juneau|Kentucky|Los_Angeles|Menominee|Metlakatla|New_York|Nome|North_Dakota|Phoenix|Sitka|Yakutat|Honolulu/i.test(A17.guessedUserTimeZone);\n\n// defaults\nA17.settings.ClockType = 'analogue';\nA17.settings.DigitalFormat = A17.guessedUserUSA ? '12' : '24';\nA17.settings.ShowCurrentWeather = 'true';\nA17.settings.AnimatedIcons = 'false';\nA17.settings.TemperatureUnit = A17.guessedUserUSA ? 'f' : 'c';\n\n// set up and trigger looking for the behaviors on DOM ready\nA17.onReady = function(){\n  // shift icons to top of DOM\n  document.body.insertBefore(document.getElementById('icons'),document.body.childNodes[0]);\n\n  if (A17.screensaver) {\n    A17.settings = A17.Helpers.extend(A17.settings, A17.Functions.massageScreebSaverOptions());\n  } else {\n    A17.settings.ClockType = localStorage.ClockType || A17.settings.ClockType;\n    A17.settings.DigitalFormat = localStorage.DigitalFormat || A17.settings.DigitalFormat;\n    A17.settings.ShowCurrentWeather = localStorage.ShowCurrentWeather || A17.settings.ShowCurrentWeather;\n    A17.settings.AnimatedIcons = localStorage.AnimatedIcons || A17.settings.AnimatedIcons;\n    A17.settings.TemperatureUnit = localStorage.TemperatureUnit || A17.settings.TemperatureUnit;\n  }\n\n  // sort out which media query we're using\n  A17.currentMediaQuery = A17.Helpers.getCurrentMediaQuery();\n\n  // on resize, check\n  A17.Helpers.resized();\n\n  // go go go\n  A17.Helpers.manageBehaviors();\n};\n\ndocument.addEventListener('DOMContentLoaded', function(){\n  A17.onReady();\n});\n\n// make console.log safe\nif (typeof console === 'undefined') {\n  window.console = {\n    log: function () {\n      return;\n    }\n  };\n}\n\n\n//# sourceURL=webpack://Timezones/./js/application.js?");

/***/ }),

/***/ "./js/behaviors/analogue.js":
/*!**********************************!*\
  !*** ./js/behaviors/analogue.js ***!
  \**********************************/
/***/ (() => {

eval("A17.Behaviors.analogue = function(container) {\n\n  var minuteInterval;\n  var timezonesStyleBlock = document.getElementById('animations');\n\n  function _transformString(num) {\n    return 'transform:rotate(' + num + 'deg);';\n  }\n\n  function _animationString(hand,num) {\n    return '@keyframes time_' + hand + ' { from { transform: rotate(' + num + 'deg); } to { transform: rotate(' + (num + 360) + 'deg); } }\\n';\n  }\n\n  function _setClock() {\n    var str = '';\n    var h = 0;\n    var m = 0;\n    var s = 0;\n    var time;\n\n    // safari seems to need this thrash, otherwise it won't animate the hands\n    timezonesStyleBlock.textContent = '.m-analogue__hour, .m-analogue__minute, .m-analogue__second { animation: none; }';\n\n    window.requestAnimationFrame(function() {\n      //\n      time = new Date();\n      h = time.getHours();\n      m = time.getMinutes();\n      s = time.getSeconds();\n      ms = time.getMilliseconds();\n      //\n      h = (h > 12) ? h - 12 : h; // 24h/12h fix\n      h = 0.5 * (60 * h + m); // https://en.wikipedia.org/wiki/Clock_angle_problem\n      //\n      m = (m * 6) + (s / 60 * 6); // 60 minutes in 360 degrees, adjusted for how many seconds have passed\n      //\n      s = (s + (ms / 1000)) * 6; // 60 seconds in 360 degrees accounting for milliseconds\n      //\n      //\n      str = _animationString('hours', h);\n      str += _animationString('minutes', m);\n      str += _animationString('seconds', s);\n      // set\n      container.querySelector('.m-analogue__hour').setAttribute('style', _transformString(h));\n      container.querySelector('.m-analogue__minute').setAttribute('style', _transformString(m));\n      container.querySelector('.m-analogue__second').setAttribute('style', _transformString(s));\n      // update\n      window.requestAnimationFrame(function() {\n        timezonesStyleBlock.textContent = str;\n      });\n    });\n  }\n\n  function _setIntervals() {\n    // updates once a minute to maintain accuracy\n    minuteInterval = setInterval(_setClock, (1 * 1000));\n  }\n\n  function _handleVisibilityChange(event) {\n    if (document.hidden) {\n      clearInterval(minuteInterval);\n      _setClock();\n    } else {\n      _setClock();\n      _setIntervals();\n    }\n  }\n\n  function _init() {\n    if (A17.settings.ClockType === 'analogue') {\n      document.documentElement.classList.add('s-analogue');\n      _setClock();\n      _setIntervals();\n    } else {\n      document.documentElement.classList.remove('s-analogue');\n      clearInterval(minuteInterval);\n      container.querySelector('.m-analogue__hour').removeAttribute('style');\n      container.querySelector('.m-analogue__minute').removeAttribute('style');\n      container.querySelector('.m-analogue__second').removeAttribute('style');\n      timezonesStyleBlock.textContent = '';\n    }\n  }\n\n  this.init = function() {\n    _init();\n    document.addEventListener('updateClockType', _init, false);\n    document.addEventListener('visibilitychange', _handleVisibilityChange, false);\n  };\n};\n\n\n//# sourceURL=webpack://Timezones/./js/behaviors/analogue.js?");

/***/ }),

/***/ "./js/behaviors/conversion.js":
/*!************************************!*\
  !*** ./js/behaviors/conversion.js ***!
  \************************************/
/***/ (() => {

eval("A17.Behaviors.conversion = function(container) {\n\n  var $body = document.body;\n  var $searchField = container.querySelector('input[type=text]');\n  var $searchResults = container.querySelector('.o-conversion__output');\n  var $close = container.querySelector('.o-conversion__close');\n  var $instruction = document.querySelector('.conversion-trigger');\n  var activeClass = 's-active';\n  var debouncer;\n  var focussed = false;\n  var timesActive = false;\n  var keysDown = {};\n  var ajaxing = false;\n  var lastSearchTime;\n\n  function _showTimes(event){\n    if (event && event.target === $instruction) {\n      $instruction.blur();\n    }\n    if (!timesActive) {\n      timesActive = true;\n      $body.classList.add(activeClass);\n      $searchField.focus();\n    }\n  }\n\n  function _hideTimes(event){\n    if (event) {\n      event.preventDefault();\n    }\n    timesActive = false;\n    $body.classList.remove(activeClass);\n    $searchField.blur();\n    $searchField.value = '';\n    $searchResults.innerHTML = '';\n  }\n\n  function _fixedEncodeURIComponent(str) {\n    return encodeURIComponent(str).replace(/[!'()*]/g, function(c) {\n      return '%' + c.charCodeAt(0).toString(16);\n    });\n  }\n\n  function _doSearch(value){\n    if (!ajaxing) {\n      ajaxing = true;\n      lastSearchTime = Date.now();\n      var thisSearchTime = lastSearchTime;\n      container.classList.add('js-loading');\n      A17.Helpers.ajaxRequest({\n        url: '/convert.php',\n        type: 'GET',\n        data: {\n          str: _fixedEncodeURIComponent(value),\n          tz: _fixedEncodeURIComponent(A17.guessedUserTimeZone),\n        },\n        onSuccess: function(data){\n          if (data.length > 0 && thisSearchTime === lastSearchTime) {\n            $searchResults.innerHTML = data;\n            container.classList.remove('js-loading');\n          }\n          ajaxing = false;\n        },\n        onError: function(data){\n          console.log(data);\n          ajaxing = false;\n        }\n      });\n    }\n  }\n\n  function _searchFieldFocus() {\n    _showTimes();\n  }\n\n  function _searchFieldBlur(event) {\n    if (timesActive && $searchResults.innerHTML === '' || !event.relatedTarget) {\n      _hideTimes();\n    }\n  }\n\n  function _searchFieldKeyUp(event) {\n    if($searchField.value.length > 0 && event.keyCode != 27) {\n      clearTimeout(debouncer);\n      debouncer = setTimeout(function(){\n        _doSearch($searchField.value);\n      },500);\n    }\n  }\n\n  function _documentKeyDown(event) {\n    keysDown[event.keyCode] = true;\n    if (event.target.tagName.toLowerCase() !== 'input' && !keysDown['91'] && !keysDown['17']) {\n      if (event.keyCode >= 65 && event.keyCode <= 90 || event.keyCode >= 48 && event.keyCode <= 57 || event.keyCode >= 96 && event.keyCode <= 105) {\n        _showTimes();\n      }\n    }\n  }\n\n  function _documentKeyUp(event) {\n    keysDown[event.keyCode] = false;\n    if (timesActive && event.keyCode == 27) {\n      _hideTimes();\n    }\n  }\n\n  this.init = function() {\n    if (!A17.screensaver) {\n      $instruction.addEventListener('click', _showTimes, false);\n      $searchField.addEventListener('focus', _searchFieldFocus, false);\n      $searchField.addEventListener('blur', _searchFieldBlur, false);\n      $searchField.addEventListener('keyup', _searchFieldKeyUp, false);\n      $close.addEventListener('click', _hideTimes, false);\n      document.addEventListener('keydown', _documentKeyDown, false);\n      document.addEventListener('keyup', _documentKeyUp, false);\n    }\n  };\n};\n\n\n//# sourceURL=webpack://Timezones/./js/behaviors/conversion.js?");

/***/ }),

/***/ "./js/behaviors/digital.js":
/*!*********************************!*\
  !*** ./js/behaviors/digital.js ***!
  \*********************************/
/***/ (() => {

eval("A17.Behaviors.digital = function(container) {\n\n  var minutesTemp = 99;\n  var secondInterval, str;\n\n  function _updateDigitalTime(override) {\n    var format = A17.settings.DigitalFormat || '24';\n    var time = new Date();\n    var h = time.getHours();\n    var m = time.getMinutes();\n    var s = time.getSeconds();\n    var pm = (h > 12);\n    //\n    h = (format !== '24' && h > 12) ? h - 12 : h;\n    if (m < 10) {\n      m = '0' + m;\n    }\n    if (s < 10) {\n      s = '0' + s;\n    }\n    //\n    var newStr = h + ':' + m + ':' + s;\n    if (format !== '24') {\n      newStr = newStr + ' <sup>' + (pm ? 'PM' : 'AM') + '</sup>';\n    }\n    //\n    if(format === '24') {\n      container.classList.add('m-digital--24');\n    } else {\n      container.classList.remove('m-digital--24');\n    }\n    //\n    if (str !== newStr) {\n      str = newStr;\n      container.innerHTML = str;\n    }\n  }\n\n  function _updateDigitalFormat() {\n    _updateDigitalTime(true);\n  }\n\n  function _setIntervals() {\n    secondInterval = setInterval(_updateDigitalTime, 1000);\n  }\n\n  function _handleVisibilityChange() {\n    if (document.hidden) {\n      clearInterval(secondInterval);\n      container.innerHTML = '';\n    } else {\n      _updateDigitalTime(true);\n      _setIntervals();\n    }\n  }\n\n\n  function _init() {\n    if (A17.settings.ClockType === 'digital' || A17.settings.ClockType === 'map') {\n      document.documentElement.classList.add('s-digital');\n      _updateDigitalTime();\n      _setIntervals();\n    } else {\n      document.documentElement.classList.remove('s-digital');\n      clearInterval(secondInterval);\n      container.innerHTML = '';\n    }\n  }\n\n  this.init = function() {\n    _init();\n\n    document.addEventListener('updateDigitalFormat', _updateDigitalFormat, false);\n    document.addEventListener('updateClockType', _init, false);\n    document.addEventListener('visibilitychange', _handleVisibilityChange, false);\n  };\n};\n\n\n//# sourceURL=webpack://Timezones/./js/behaviors/digital.js?");

/***/ }),

/***/ "./js/behaviors/map.js":
/*!*****************************!*\
  !*** ./js/behaviors/map.js ***!
  \*****************************/
/***/ (() => {

eval("A17.Behaviors.map = function(container) {\n\n  function _init() {\n    if (A17.settings.ClockType === 'map') {\n      document.documentElement.classList.add('s-map');\n    } else {\n      document.documentElement.classList.remove('s-map');\n    }\n  }\n\n  this.init = function() {\n    _init();\n\n    document.addEventListener('updateClockType', _init, false);\n  };\n};\n\n\n//# sourceURL=webpack://Timezones/./js/behaviors/map.js?");

/***/ }),

/***/ "./js/behaviors/settings.js":
/*!**********************************!*\
  !*** ./js/behaviors/settings.js ***!
  \**********************************/
/***/ (() => {

eval("A17.Behaviors.settings = function(container){\n\n  var $trigger = document.querySelector('.settings-trigger');\n  var $close = document.querySelector('.close-settings-trigger');\n  var $checkboxes = container.querySelectorAll('input[type=checkbox]');\n  var radiosArr = ['ClockType', 'DigitalFormat','TemperatureUnit'];\n  var $clockType = container.querySelector('input[type=radio][name=ClockType]');\n  var $digitalFormat = container.querySelectorAll('input[type=radio][name=DigitalFormat]');\n  var $temperatureUnit = container.querySelectorAll('input[type=radio][name=TemperatureUnit]');\n\n  function _checkboxClicked(event) {\n    localStorage[this.value] = this.checked;\n    A17.settings[this.value] = this.checked.toString();\n    A17.Helpers.triggerCustomEvent(document, 'update'+this.value);\n  }\n\n  function _showHideSettings(event) {\n    event.preventDefault();\n    this.blur();\n    if (document.documentElement.classList.contains('s-settings-active')) {\n      document.documentElement.classList.remove('s-settings-active');\n    } else {\n      document.documentElement.classList.add('s-settings-active');\n    }\n  }\n\n  function _escapeToClose(event) {\n    if (document.documentElement.classList.contains('s-settings-active') && event.keyCode === 27) {\n      document.documentElement.classList.remove('s-settings-active');\n    }\n  }\n\n  function _radioClicked(event) {\n    localStorage[this.name] = this.value;\n    A17.settings[this.name] = this.value;\n    A17.Helpers.triggerCustomEvent(document, 'update'+this.name);\n  }\n\n  function _init() {\n    var i, j, input;\n    // check for locally stored setting\n    for (i = 0; i < $checkboxes.length; i++) {\n      input = $checkboxes[i];\n      input.checked = (A17.settings[input.value] === 'true') ? true : false;\n      $checkboxes[i].addEventListener('click', _checkboxClicked, false);\n    }\n\n    for (i = 0; i < radiosArr.length; i++) {\n      var name = radiosArr[i];\n      var inputs = container.querySelectorAll('input[type=radio][name='+name+']');\n      container.querySelector('input[type=radio][name='+name+'][value=\\''+A17.settings[name]+'\\']').checked = true;\n      for (j = 0; j < inputs.length; j++) {\n        inputs[j].addEventListener('click', _radioClicked, false);\n      }\n    }\n  }\n\n  this.init = function() {\n    if (!A17.screensaver) {\n      _init();\n      $trigger.addEventListener('click', _showHideSettings, false);\n      $close.addEventListener('click', _showHideSettings, false);\n      document.addEventListener('keyup', _escapeToClose, false);\n    }\n  };\n};\n\n\n//# sourceURL=webpack://Timezones/./js/behaviors/settings.js?");

/***/ }),

/***/ "./js/behaviors/showHideAnimatedIconsToggler.js":
/*!******************************************************!*\
  !*** ./js/behaviors/showHideAnimatedIconsToggler.js ***!
  \******************************************************/
/***/ (() => {

eval("A17.Behaviors.showHideAnimatedIconsToggler = function(container) {\n\n  function _hideshowWeather() {\n    var showWeather = A17.settings.ShowCurrentWeather || 'false';\n    if (showWeather === 'false') {\n      container.querySelector('input').setAttribute('disabled','disabled');\n    } else {\n      container.querySelector('input').removeAttribute('disabled');\n    }\n  }\n\n  this.init = function() {\n    _hideshowWeather();\n    document.addEventListener('updateShowCurrentWeather', _hideshowWeather, false);\n  };\n};\n\n\n//# sourceURL=webpack://Timezones/./js/behaviors/showHideAnimatedIconsToggler.js?");

/***/ }),

/***/ "./js/behaviors/timezones.js":
/*!***********************************!*\
  !*** ./js/behaviors/timezones.js ***!
  \***********************************/
/***/ (() => {

eval("A17.Behaviors.timezones = function(container) {\n\n  var locationTemplate = '<li id=\"{{locationID}}\" class=\"m-timezone s-loading\">\\n<div class=\"m-timezone__inner\">\\n<span class=\"m-timezone__title\">\\n<strong class=\"m-timezone__name\">{{name}}</strong>\\n<em class=\"m-timezone__time\">{{time}}</em>\\n</span>\\n<span class=\"m-timezone__weather\">\\n</span>\\n</div>\\n</li>\\n';\n  var iconTemplate = '<svg class=\"icon\" aria-hidden=\"true\"><use xlink:href=\"#{{name}}\" /></svg>';\n  var liHtml = '';\n  var mTemp = 99; // initial value out of range\n  var updatingWeather = false;\n  var lastWeatherCheck = 0;\n  var officeOpen = 9;\n  var officeClosed = 19;\n  var time, secondInterval, weatherInterval, weatherRecievedCounter, prevClockType;\n  var $mapContainer = container.querySelector('.m-map__box');\n  var $mapContainerUl;\n\n  function _convertFtoC(f) {\n    return (f - 32) * (5 / 9);\n  }\n\n  function _convertCtoF(c) {\n    return c * 9 / 5 + 32;\n  }\n\n  function _uvindexRating(i) {\n    if (i < 3) {\n      return 'low';\n    }\n    if (i < 6) {\n      return 'moderate';\n    }\n    if (i < 8) {\n      return 'high';\n    }\n    return 'very high'\n  }\n\n  function _updateTemperatures(location,index) {\n    var locationEl = document.getElementById(location.id);\n    if (locationEl) {\n      var rainChanceClass = '';\n      var rainChanceClass = (location.conditions.rainChance > 49) ? ' m-timezone__rain-chance--raining' : '';\n      // show umbrella emoji to illustrate rain chance\n      var umbrellaEmoji = '🌂'; // default, low chance of rain\n      var umbrellaClass = '';\n      if (location.conditions.rainChance > 20) {\n        umbrellaEmoji = '☂️'; // some chance of rain\n      }\n      if (location.conditions.rainChance > 80) {\n        umbrellaEmoji = '☔'; // high chance of rain\n      }\n      if (/snow/i.test(location.conditions.icon)) {\n        umbrellaEmoji = '⛄️'; // override for snowing\n      } else {\n        if (/rain|sleet/i.test(location.conditions.icon)) {\n          umbrellaEmoji = '☔'; // override for raining or sleeting\n        }\n        if ((/wind/i.test(location.conditions.icon) || /wind/i.test(location.conditions.summary)) && location.conditions.rainChance > 80) {\n          umbrellaClass = ' m-timezone__emoji--windy'; // if windy and high rain chance\n        }\n      }\n      // add class for high/low temps, 0°C is 33°F\n      var temperatureClass = '';\n      if (location.conditions.temperature < 4) {\n        temperatureClass = ' m-timezone__feels-like--cold';\n      } else if (location.conditions.temperature < -3) {\n        temperatureClass = ' m-timezone__feels-like--really-cold';\n      } else if (location.conditions.temperature > 30) {\n        // I'm British, 30°C/86°F is hot for me\n        temperatureClass = ' m-timezone__feels-like--hot';\n      } else if (location.conditions.temperature > 37.78) {\n        // Americans go bananas about 100+°F temperatures\n        temperatureClass = ' m-timezone__feels-like--really-hot';\n      }\n      //\n      var tempUnit = A17.settings.TemperatureUnit || 'c';\n      var temp = Math.round( (tempUnit === 'c') ? location.conditions.temperature : _convertCtoF(location.conditions.temperature) );\n      var tempFeelsLike = Math.round( (tempUnit === 'c') ? location.conditions.feelsLike : _convertCtoF(location.conditions.feelsLike) );\n      var tempMin = Math.round( (tempUnit === 'c') ? location.conditions.tempmin : _convertCtoF(location.conditions.tempmin) );\n      var tempMax = Math.round( (tempUnit === 'c') ? location.conditions.tempmax : _convertCtoF(location.conditions.tempmax) );\n      var moonPhase = A17.Functions.moonPhase();\n      var weatherSummary = location.conditions.summary[0].toUpperCase() + location.conditions.summary.substring(1).toLowerCase() + '.';\n      var weatherEmoji = (location.conditions.icon !== 'clear-night') ? iconTemplate.replace('{{name}}',location.conditions.icon) : iconTemplate.replace('{{name}}',moonPhase.icon);\n      if (A17.settings.AnimatedIcons === 'true' && location.conditions.icon !== 'clear-night') {\n        weatherEmoji = iconTemplate.replace('{{name}}',location.conditions.icon + '--animated');\n      }\n      weatherSummary = (location.conditions.icon !== 'clear-night') ? weatherSummary : weatherSummary + ' Moon phase is ' + moonPhase.phase.toLowerCase() + ' ' + moonPhase.emoji + '.';\n      var emojiClass = (location.conditions.icon === 'clear-day') ? ' m-timezone__emoji--sunny' : '';\n      var sunglasses = location.conditions.uvindex > 6 ? '🕶️' : '';\n      //\n      tempUnit = tempUnit.toUpperCase();\n      //\n      var $weatherSpan = locationEl.querySelector('.m-timezone__weather');\n      var weatherSpanHTML = '';\n      weatherSpanHTML += '<span class=\"m-timezone__feels-like' + temperatureClass + '\"><span class=\"m-timezone__emoji' + emojiClass + '\">' + weatherEmoji + '</span>' + temp + '&deg;' + tempUnit + '</span>\\n';\n      weatherSpanHTML += '<span class=\"m-timezone__rain-chance' + rainChanceClass + '\"\"><span class=\"m-timezone__emoji' + umbrellaClass + '\">' + iconTemplate.replace('{{name}}', 'rain-drops') + '</span>' + location.conditions.rainChance + '%</span>';\n      //\n      var title = weatherSummary + ' \\nMinimum ' + tempMin + '°' + tempUnit + ', maximum ' + tempMax + '°' + tempUnit + ',  feels like ' + tempFeelsLike + '°' + tempUnit + '. \\nProbability of ' + location.conditions.preciptype + ' in the next hour: ' + location.conditions.rainChance + '% ' + umbrellaEmoji + '.\\nSunrise at ' + location.conditions.sunrise + ', sunset at ' + location.conditions.sunset + '. \\nUV index ' + location.conditions.uvindex + ' (' + _uvindexRating(location.conditions.uvindex) + ') ' + sunglasses;\n      //\n      $weatherSpan.parentNode.title = title;\n      $weatherSpan.innerHTML = weatherSpanHTML;\n      //\n      locationEl.classList.remove('s-loading');\n    }\n  }\n\n  function _updateWeather() {\n    if ((A17.settings.ShowCurrentWeather === 'true') && !updatingWeather) {\n      if (new Date().getTime() > lastWeatherCheck + 1800000) {\n        updatingWeather = true;\n        weatherRecievedCounter = 0;\n        A17.locations.forEach(_getWeather);\n      } else {\n        A17.locations.forEach(function(location, index){\n          _updateTemperatures(location, index);\n        });\n      }\n    }\n  }\n\n  function _recievedWeather() {\n    weatherRecievedCounter++;\n    if (weatherRecievedCounter === A17.locations.length) {\n      updatingWeather = false;\n      lastWeatherCheck = new Date().getTime();\n      _updateWeather();\n    }\n  }\n\n  function _getWeather(location,index) {\n    A17.Helpers.ajaxRequest({\n      url: '/forecast.php',\n      type: 'GET',\n      data: {\n        lat: location.lat,\n        long: location.long\n      },\n      onSuccess: function(data){\n        data = JSON.parse(data);\n        //\n        location.conditions = location.conditions || {};\n        location.conditions.temperature = Math.round(data.currentConditions.temp);\n        location.conditions.icon = data.currentConditions.icon;\n        location.conditions.feelsLike = Math.round(data.currentConditions.feelslike);\n        location.conditions.rainChance = Math.round(data.currentConditions.precipprob);\n        location.conditions.summary = data.currentConditions.conditions;\n        location.conditions.tempmax = data.days[0].tempmax;\n        location.conditions.tempmin = data.days[0].tempmin;\n        location.conditions.sunrise = data.currentConditions.sunrise;\n        location.conditions.sunset = data.currentConditions.sunset;\n        location.conditions.uvindex = data.currentConditions.uvindex;\n        location.conditions.preciptype = data.currentConditions.preciptype || 'rain';\n        location.conditions.moonphase = data.currentConditions.moonphase;\n        //\n        _updateTemperatures(location, index);\n        //\n        _recievedWeather();\n      },\n      onError: function(data){\n        console.log(data);\n        _recievedWeather();\n      }\n    });\n  }\n\n  function _updateTimes(override) {\n    time = new Date();\n    var systemH = time.getHours();\n    var systemM = time.getMinutes();\n    time = new Date(time.getUTCFullYear(), time.getUTCMonth(), time.getUTCDate(), time.getUTCHours(), time.getUTCMinutes(), time.getUTCSeconds());\n    time = time.getTime()/1000;\n    //\n    if (mTemp !== systemM || override) {\n      mTemp = systemM;\n      A17.locations.forEach(function(location,index){\n        var locationEl = document.getElementById(location.id);\n        var format = A17.settings.DigitalFormat || '24';\n        var thisTime = new Date((time + location.offset) * 1000);\n        var thisH = thisTime.getHours();\n        var thisM = thisTime.getMinutes();\n        var thisDay = thisTime.getDay();\n        var isCurrent = (thisH === systemH);\n        var isOpen = (thisH >= officeOpen && thisH < officeClosed && thisDay !== 0 && thisDay !== 6);\n        var str = '';\n        //\n        if (thisM < 10) {\n          thisM = '0' + thisM; // leading zero minutes\n        }\n        //\n        if (format !== '24') {\n          str = (thisH > 12 ? thisH - 12 : thisH) + ':' + thisM + (thisH > 12 ? ' pm' : ' am');\n        } else {\n          str = thisH + ':' + thisM;\n        }\n        if (isCurrent) {\n          locationEl.classList.add('s-current');\n        } else {\n          locationEl.classList.remove('s-current');\n        }\n        if (isOpen) {\n          locationEl.classList.add('s-open');\n        } else {\n          locationEl.classList.remove('s-open');\n        }\n        //\n        locationEl.querySelector('.m-timezone__time').innerHTML = str;\n      });\n    }\n  }\n\n  //\n  function _updateDigitalFormat() {\n    _updateTimes(true);\n  }\n\n  function _hideshowWeather() {\n    var showWeather = A17.settings.ShowCurrentWeather || 'true';\n    if (showWeather === 'false') {\n      document.documentElement.classList.add('s-hide-weather');\n    } else {\n      document.documentElement.classList.remove('s-hide-weather');\n      _updateWeather();\n    }\n  }\n\n  function _updateTemperatureUnit() {\n    A17.locations.forEach(function(location, index){\n      _updateTemperatures(location, index);\n    });\n  }\n\n  function _setIntervals() {\n    secondInterval = setInterval(_updateTimes, 1000 * 20);\n    weatherInterval = setInterval(_updateWeather, 60 * 30 * 1000);\n  }\n\n  function _handleVisibilityChange() {\n    if (document.hidden) {\n      clearInterval(secondInterval);\n      clearInterval(weatherInterval);\n    } else {\n      _updateTimes(true);\n      _updateWeather();\n      _setIntervals();\n    }\n  }\n\n  function _windowLoad() {\n    _hideshowWeather();\n  }\n\n  function _generateClocks() {\n    A17.locations.forEach(function(location,index){\n      //\n      var thisLocationTemplate = locationTemplate;\n      thisLocationTemplate = thisLocationTemplate.replace('{{time}}','');\n      thisLocationTemplate = thisLocationTemplate.replace('{{name}}',location.name);\n      thisLocationTemplate = thisLocationTemplate.replace('{{iconID}}','icon-'+index);\n      thisLocationTemplate = thisLocationTemplate.replace('{{locationID}}',location.id);\n      //\n      liHtml += thisLocationTemplate;\n    });\n  }\n\n  function _addClocks() {\n    var tpl = document.createElement('template');\n    tpl.innerHTML = liHtml;\n\n    if (A17.settings.ClockType === 'map') {\n      $mapContainerUl = document.createElement('ul');\n      $mapContainerUl.appendChild(tpl.content);\n      $mapContainer.appendChild($mapContainerUl);\n    } else {\n      container.appendChild(tpl.content);\n    }\n\n    _updateTimes(true);\n\n    prevClockType = A17.settings.ClockType;\n  }\n\n  function _updateClockType() {\n    if (!prevClockType) {\n      return;\n    }\n\n    if (\n      (prevClockType === 'map' && A17.settings.ClockType !== 'map')\n      ||\n      (prevClockType !== 'map' && A17.settings.ClockType === 'map')\n    ) {\n\n      if (A17.settings.ClockType === 'map') {\n        container.querySelectorAll('.m-timezone').forEach(function($tz) {\n          $tz.parentNode.removeChild($tz);\n        });\n      } else {\n        $mapContainerUl.parentNode.removeChild($mapContainerUl);\n        $mapContainerUl = null;\n      }\n\n      _addClocks();\n\n      _updateTimes(true);\n\n      _updateWeather();\n    }\n  }\n\n  function _init() {\n    _generateClocks();\n\n    _addClocks();\n\n    _setIntervals();\n  }\n\n  this.init = function() {\n    _init();\n\n    document.addEventListener('updateDigitalFormat', _updateDigitalFormat, false);\n    document.addEventListener('updateShowCurrentWeather', _hideshowWeather, false);\n    document.addEventListener('updateTemperatureUnit', _updateTemperatureUnit, false);\n    document.addEventListener('updateAnimatedIcons', _hideshowWeather, false);\n    document.addEventListener('visibilitychange', _handleVisibilityChange, false);\n    window.addEventListener('load', _windowLoad, false);\n    document.addEventListener('updateClockType', _updateClockType, false);\n  };\n};\n\n\n//# sourceURL=webpack://Timezones/./js/behaviors/timezones.js?");

/***/ }),

/***/ "./js/functions/massageScreenSaverOptions.js":
/*!***************************************************!*\
  !*** ./js/functions/massageScreenSaverOptions.js ***!
  \***************************************************/
/***/ (() => {

eval("A17.Functions.massageScreebSaverOptions = function() {\n  var queryStringObj = A17.Helpers.turnQueryStringToObject(window.location.search);\n  // need to massage options coming in from screen saver options\n  if (queryStringObj.clocktype) {\n    if (queryStringObj.clocktype.toLowerCase() === 'analogue') {\n      queryStringObj.ClockType = 'analogue';\n    } else {\n      queryStringObj.ClockType = 'digital';\n    }\n    delete queryStringObj.clocktype;\n  }\n  if (queryStringObj.digitalformat) {\n    queryStringObj.DigitalFormat = (parseInt(queryStringObj.digitalformat) === 24) ? '24' : '12';\n    delete queryStringObj.digitalformat;\n  }\n  if (queryStringObj.temperatureunit) {\n    if (queryStringObj.temperatureunit.toLowerCase() === 'fahrenheit') {\n      queryStringObj.TemperatureUnit = 'f';\n    } else {\n      queryStringObj.TemperatureUnit = 'c';\n    }\n    delete queryStringObj.temperatureunits;\n  }\n  if (queryStringObj.showcurrentweather) {\n    queryStringObj.ShowCurrentWeather = queryStringObj.showcurrentweather.toLowerCase();\n    delete queryStringObj.showcurrentweather;\n  }\n  if (queryStringObj.animtedicons) {\n    queryStringObj.AnimatedIcons = queryStringObj.animtedicons.toLowerCase();\n    delete queryStringObj.animtedicons;\n  }\n  return queryStringObj;\n};\n\n\n//# sourceURL=webpack://Timezones/./js/functions/massageScreenSaverOptions.js?");

/***/ }),

/***/ "./js/functions/moonphase.js":
/*!***********************************!*\
  !*** ./js/functions/moonphase.js ***!
  \***********************************/
/***/ (() => {

eval("A17.Functions.moonPhase = function() {\n  /*\n  A rehashed version of https://gist.github.com/L-A/3497902\n  */\n  var AG = 0;\n  var phase = '';\n  var phaseEmojis = ['🌑','🌒','🌓','🌔','🌕','🌖','🌗','🌘'];\n  var emoji = '🌘';\n  var icon = 'waning_crescent';\n  var now = new Date();\n  var year = now.getUTCFullYear();\n  var month = now.getUTCMonth() + 1;\n  var day = now.getUTCDate();\n  var YY = 0,\n      MM = 0,\n      K1 = 0,\n      K2 = 0,\n      K3 = 0,\n      JD = 0,\n      IP = 0;\n\n  // calculate the Julian date at 12h UT\n  YY = year - Math.floor((12 - month) / 10);\n  MM = month + 9;\n  if(MM >= 12) {\n    MM = MM - 12;\n  }\n\n  K1 = Math.floor(365.25 * ( YY + 4712 ));\n  K2 = Math.floor(30.6 * MM + 0.5);\n  K3 = Math.floor(Math.floor((YY / 100) + 49) * 0.75) - 38;\n\n  JD = K1 + K2 + day + 59;            // for dates in Julian calendar\n  if(JD > 2299160) {\n    JD = JD - K3;      // for Gregorian calendar\n  }\n\n  // calculate moon's age in days\n  IP = (JD - 2451550.1) / 29.530588853;\n  IP = IP - Math.floor(IP);\n  if(IP < 0) {\n    IP = IP + 1;\n  }\n  AG = IP * 29.53;\n\n  if(AG < 1.84566) {\n    phase = 'A new moon';\n    emoji = phaseEmojis[0];\n    icon = 'new-moon';\n  } else if(AG <  5.53699) {\n    phase = 'An evening crescent';\n    emoji = phaseEmojis[1];\n    icon = 'waxing-crescent';\n  } else if(AG < 9.22831) {\n    phase = 'A first quarter';\n    emoji = phaseEmojis[2];\n    icon = 'first-quarter';\n  } else if(AG < 12.91963) {\n    phase = 'A waxing gibbous';\n    icon = 'waxing-gibbous';\n    emoji = phaseEmojis[3];\n  } else if(AG < 16.61096) {\n    phase = 'A full moon';\n    emoji = phaseEmojis[4];\n    icon = 'full-moon';\n  } else if(AG < 20.30228) {\n    phase = 'A waning gibbous';\n    emoji = phaseEmojis[5];\n    icon = 'waning-gibbous';\n  } else if(AG < 23.99361) {\n    phase = 'A Last quarter';\n    emoji = phaseEmojis[6];\n    icon = 'last-quarter';\n  } else if(AG < 27.68493) {\n    phase = 'A Morning crescent';\n    emoji = phaseEmojis[7];\n    icon = 'waning-crescent';\n  } else {\n    phase = 'A new moon';\n    emoji = phaseEmojis[0];\n    icon = 'new-moon';\n  }\n\n  return {\n    phase: phase,\n    emoji: emoji,\n    icon: icon\n  };\n};\n\n\n//# sourceURL=webpack://Timezones/./js/functions/moonphase.js?");

/***/ }),

/***/ "./js/helpers/ajaxRequest.js":
/*!***********************************!*\
  !*** ./js/helpers/ajaxRequest.js ***!
  \***********************************/
/***/ (() => {

eval("A17.Helpers.ajaxRequest = function(settings) {\n  // Doc: https://code.area17.com/mike/a17-js-helpers/wikis/A17-Helpers-ajaxRequest\n\n  var options = settings;\n  var request = new XMLHttpRequest();\n  var requestUrl = options.url;\n\n  options.queryString = '';\n  if (options.data !== undefined) {\n    if (A17.Helpers.turnObjectToQueryString) {\n      options.queryString = A17.Helpers.turnObjectToQueryString(options.data);\n    } else {\n      throw new ReferenceError('Missing: A17.Helpers.turnObjectToQueryString');\n    }\n  }\n\n  if (options.type !== 'POST') {\n    requestUrl += (requestUrl.indexOf('?') > 0) ? options.queryString.replace('?', '&') : options.queryString;\n  }\n\n  request.open(options.type, requestUrl, true);\n\n  request.setRequestHeader('X-Requested-With', 'XMLHttpRequest');\n\n  if (options.type === 'POST') {\n    request.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded; charset=UTF-8');\n  }\n\n  if (options.requestHeaders !== undefined && options.requestHeaders.length > 0) {\n    for (var i = 0; i < options.requestHeaders.length; i++) {\n      var header = options.requestHeaders[i].header;\n      var value = options.requestHeaders[i].value;\n      if (header !== undefined && value !== undefined) {\n        request.setRequestHeader(header, value);\n      }\n    }\n  }\n\n  request.onload = function() {\n    if (request.status >= 200 && request.status < 400) {\n\n      // Success!\n      if ((typeof options.onSuccess).toLowerCase() === 'function') {\n        options.onSuccess.call(this, request.responseText, request.status);\n      }\n    } else {\n      if ((typeof options.onError).toLowerCase() === 'function') {\n        options.onError.call(this, request.responseText, request.status);\n      }\n      console.log('We reached our target server, but it returned an error: '+request.statusText);\n    }\n  };\n\n  request.onerror = function() {\n    console.log('There was a connection error of some sort');\n    if ((typeof options.onError).toLowerCase() === 'function') {\n      options.onError.call(this, request.responseText, request.status);\n    }\n  };\n\n  request.send((options.type === 'POST') ? options.queryString.replace('?', '') : '');\n};\n\n\n//# sourceURL=webpack://Timezones/./js/helpers/ajaxRequest.js?");

/***/ }),

/***/ "./js/helpers/extend.js":
/*!******************************!*\
  !*** ./js/helpers/extend.js ***!
  \******************************/
/***/ (() => {

eval("A17.Helpers.extend = function () {\n  // Doc: https://code.area17.com/mike/a17-js-helpers/wikis/A17-Helpers-extend\n\n  var obj = {};\n  var i = 0;\n  var argumentsLength = arguments.length;\n  var key;\n\n  for (; i < argumentsLength; i++) {\n    for (key in arguments[i]) {\n      if (arguments[i].hasOwnProperty(key)) {\n        obj[key] = arguments[i][key];\n      }\n    }\n  }\n\n  return obj;\n\n};\n\n\n//# sourceURL=webpack://Timezones/./js/helpers/extend.js?");

/***/ }),

/***/ "./js/helpers/getCurrentMediaQuery.js":
/*!********************************************!*\
  !*** ./js/helpers/getCurrentMediaQuery.js ***!
  \********************************************/
/***/ (() => {

eval("A17.Helpers.getCurrentMediaQuery = function() {\n  // Doc: https://code.area17.com/mike/a17-js-helpers/wikis/A17-Helpers-getCurrentMediaQuery\n\n  function parse(str) {\n    return str.replace(/'/gi, '').replace(/\"/gi, '');\n  }\n\n  if (window.opera) {\n    return parse(window.getComputedStyle(document.body, ':after').getPropertyValue('content')) || 'large';\n  } else if (window.getComputedStyle) {\n    return parse(window.getComputedStyle(document.head, null).getPropertyValue('font-family')) || 'large';\n  } else {\n    return 'large';\n  }\n};\n\n\n//# sourceURL=webpack://Timezones/./js/helpers/getCurrentMediaQuery.js?");

/***/ }),

/***/ "./js/helpers/manageBehaviors.js":
/*!***************************************!*\
  !*** ./js/helpers/manageBehaviors.js ***!
  \***************************************/
/***/ (() => {

eval("A17.Helpers.manageBehaviors = function(options) {\n\n  /*\n    default init listens for event 'page:updated':\n    A17.Helpers.manageBehaviors();\n\n    init for pjax:\n    A17.Helpers.manageBehaviors({pageUpdatedEventName:'pjax:end'});\n\n    init for spf:\n    A17.Helpers.manageBehaviors({pageUpdatedEventName:'spfdone'});\n  */\n\n  var idCounter = 0;\n  var pageUpdatedEventName = (options && options.pageUpdatedEventName) ? options.pageUpdatedEventName : 'page:updated';\n\n  function searchDomAndInitBehaviors(context) {\n    if(context === undefined) {\n      context = document;\n    }\n    var all = context.querySelectorAll('[data-behavior]');\n    var i = -1;\n    while (all[++i]) {\n      var currentElement = all[i];\n\n      // check to see if this element has had its behaviors already initialized by looking for _A17BehaviorsActive\n      if (!currentElement._A17BehaviorsActive) {\n        //console.log('initializing behaviors for:\\n', currentElement);\n        var behaviors = currentElement.getAttribute('data-behavior');\n        var splittedBehaviors = behaviors.split(' ');\n        for (var j = 0, k = splittedBehaviors.length; j < k; j++) {\n          var ThisBehavior = A17.Behaviors[splittedBehaviors[j]];\n          if(typeof ThisBehavior !== 'undefined') {\n            try {\n              // mark the element as having its behaviors initialized\n              currentElement._A17BehaviorsActive = true;\n\n              // add this instance to the activeBehaviors object so it can be interrogated if the page is updated later\n              A17.activeBehaviors[idCounter] = {\n                el: currentElement,\n                behavior: new ThisBehavior(currentElement),\n                name: splittedBehaviors[j]\n              };\n\n              try {\n                A17.activeBehaviors[idCounter].behavior.init();\n              } catch (err) {\n                //console.log('failed to init behavior: ', A17.activeBehaviors[idCounter].name, '\\n', err, A17.activeBehaviors[idCounter]);\n              }\n\n              idCounter++;\n            } catch(err) {\n              //console.log(err, currentElement, ThisBehavior);\n            }\n          }\n        }\n      } else {\n\n        //console.log('behaviors already initialized for:\\n', currentElement);\n      }\n    }\n  }\n\n  function pageUpdated() {\n    // first check if anything was removed and clean up\n    for (var activeBehaviorObj in A17.activeBehaviors) {\n      if (A17.activeBehaviors.hasOwnProperty(activeBehaviorObj)) {\n        var thisBehaviorObj = A17.activeBehaviors[activeBehaviorObj];\n\n        // check if the element is still there\n        if (!document.body.contains(thisBehaviorObj.el)) {\n          //console.log('element no longer exists:\\n', thisBehaviorObj.name, thisBehaviorObj);\n\n          // trigger its destroy if its gone\n          try {\n            thisBehaviorObj.behavior.destroy();\n            delete A17.activeBehaviors[activeBehaviorObj];\n          } catch (err) {\n            //console.log('failed to destroy behavior: ', thisBehaviorObj.name, '\\n', err, thisBehaviorObj);\n          }\n        } else {\n\n          //console.log('element still exists:\\n', thisBehaviorObj.name, thisBehaviorObj);\n        }\n      }\n    }\n\n    // now look for new behaviors!\n    searchDomAndInitBehaviors();\n  }\n\n  searchDomAndInitBehaviors();\n  document.addEventListener(pageUpdatedEventName, pageUpdated);\n  document.addEventListener('content:updated', function() {\n    searchDomAndInitBehaviors( (event.data.el) ? event.data.el : '' );\n  });\n};\n\n\n//# sourceURL=webpack://Timezones/./js/helpers/manageBehaviors.js?");

/***/ }),

/***/ "./js/helpers/oritentaitonChangeFix.js":
/*!*********************************************!*\
  !*** ./js/helpers/oritentaitonChangeFix.js ***!
  \*********************************************/
/***/ (() => {

eval("A17.Helpers.oritentaitonChangeFix = function() {\n  //http://stackoverflow.com/questions/5434656/ipad-layout-scales-up-when-rotating-from-portrait-to-landcape\n  if (navigator.userAgent.match(/iPhone/i) || navigator.userAgent.match(/iPad/i)) {\n      var viewportmeta = document.querySelector('meta[name=\"viewport\"]');\n      if (viewportmeta) {\n          viewportmeta.content = 'width=device-width, minimum-scale=1.0, maximum-scale=1.0, initial-scale=1.0';\n          document.body.addEventListener('gesturestart', function () {\n              viewportmeta.content = 'width=device-width, minimum-scale=0.25, maximum-scale=1.6';\n          }, false);\n      }\n  }\n};\nA17.Helpers.oritentaitonChangeFix();\n\n\n//# sourceURL=webpack://Timezones/./js/helpers/oritentaitonChangeFix.js?");

/***/ }),

/***/ "./js/helpers/resized.js":
/*!*******************************!*\
  !*** ./js/helpers/resized.js ***!
  \*******************************/
/***/ (() => {

eval("A17.Helpers.resized = function() {\n  // Doc: https://code.area17.com/mike/a17-js-helpers/wikis/A17-Helpers-resized\n\n  var resizeTimer;\n  var mediaQueryUpdated = false;\n\n  window.addEventListener('resize', function() {\n    clearTimeout(resizeTimer);\n    resizeTimer = setTimeout(function() {\n      // check media query\n      var newMediaQuery = A17.Helpers.getCurrentMediaQuery();\n\n      // is it different? if so, update global var\n      if (A17.currentMediaQuery !== newMediaQuery) {\n        A17.currentMediaQuery = newMediaQuery;\n        mediaQueryUpdated = true;\n      }\n\n      // tell everything resized happened\n      A17.Helpers.triggerCustomEvent(document, 'resized');\n\n      // if media query changed, tell everything\n      if (mediaQueryUpdated) {\n        A17.Helpers.triggerCustomEvent(document, 'mediaQueryUpdated');\n      }\n    }, 250);\n  });\n\n};\n\n\n//# sourceURL=webpack://Timezones/./js/helpers/resized.js?");

/***/ }),

/***/ "./js/helpers/triggerCustomEvent.js":
/*!******************************************!*\
  !*** ./js/helpers/triggerCustomEvent.js ***!
  \******************************************/
/***/ (() => {

eval("A17.Helpers.triggerCustomEvent = function(el, type, data) {\n  // Doc: https://code.area17.com/mike/a17-js-helpers/wikis/A17-Helpers-triggerCustomEvent\n\n  var event = document.createEvent('HTMLEvents');\n  event.initEvent(type, true, true);\n  event.data = data || {};\n  event.eventName = type;\n  event.target = el;\n  el.dispatchEvent(event);\n};\n\n\n//# sourceURL=webpack://Timezones/./js/helpers/triggerCustomEvent.js?");

/***/ }),

/***/ "./js/helpers/turnObjectToQueryString.js":
/*!***********************************************!*\
  !*** ./js/helpers/turnObjectToQueryString.js ***!
  \***********************************************/
/***/ (() => {

eval("A17.Helpers.turnObjectToQueryString = function(obj) {\n  // Doc: https://code.area17.com/mike/a17-js-helpers/wikis/A17-Helpers-turnObjectToQueryString\n\n  var queryString = '';\n  var count = 0;\n\n  if (Object.getOwnPropertyNames(obj).length > 0) {\n    queryString = '?';\n    for (var key in obj) {\n      if (!obj.hasOwnProperty(key)) {\n        continue;\n      }\n      queryString += ((count > 0) ? '&' : '') + key + '=' + encodeURIComponent(obj[key]).replace(/[!'()]/g, '').replace(/\\*/g, '%2A').replace(/%2B/ig, '+');\n      count++;\n    }\n  }\n\n  return queryString;\n};\n\n\n//# sourceURL=webpack://Timezones/./js/helpers/turnObjectToQueryString.js?");

/***/ }),

/***/ "./js/helpers/turnQueryStringToObject.js":
/*!***********************************************!*\
  !*** ./js/helpers/turnQueryStringToObject.js ***!
  \***********************************************/
/***/ (() => {

eval("A17.Helpers.turnQueryStringToObject = function(url) {\n  // Doc: https://code.area17.com/mike/a17-js-helpers/wikis/A17-Helpers-turnQueryStringToObject\n  if (typeof url !== 'string') {\n    return {};\n  }\n  var qsObj = {};\n  var search = (url && url.indexOf('?') > -1) ? url.split('?')[1] : location.search;\n  search.replace(\n    new RegExp('([^?=&]+)(=([^&]*))?', 'g'), function($0, $1, $2, $3) {\n      qsObj[$1] = $3;\n    }\n  );\n  return qsObj;\n};\n\n\n//# sourceURL=webpack://Timezones/./js/helpers/turnQueryStringToObject.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	__webpack_modules__["./js/application.js"]();
/******/ 	__webpack_modules__["./js/behaviors/analogue.js"]();
/******/ 	__webpack_modules__["./js/behaviors/conversion.js"]();
/******/ 	__webpack_modules__["./js/behaviors/digital.js"]();
/******/ 	__webpack_modules__["./js/behaviors/map.js"]();
/******/ 	__webpack_modules__["./js/behaviors/settings.js"]();
/******/ 	__webpack_modules__["./js/behaviors/showHideAnimatedIconsToggler.js"]();
/******/ 	__webpack_modules__["./js/behaviors/timezones.js"]();
/******/ 	__webpack_modules__["./js/functions/massageScreenSaverOptions.js"]();
/******/ 	__webpack_modules__["./js/functions/moonphase.js"]();
/******/ 	__webpack_modules__["./js/helpers/ajaxRequest.js"]();
/******/ 	__webpack_modules__["./js/helpers/extend.js"]();
/******/ 	__webpack_modules__["./js/helpers/getCurrentMediaQuery.js"]();
/******/ 	__webpack_modules__["./js/helpers/manageBehaviors.js"]();
/******/ 	__webpack_modules__["./js/helpers/oritentaitonChangeFix.js"]();
/******/ 	__webpack_modules__["./js/helpers/resized.js"]();
/******/ 	__webpack_modules__["./js/helpers/triggerCustomEvent.js"]();
/******/ 	__webpack_modules__["./js/helpers/turnObjectToQueryString.js"]();
/******/ 	var __webpack_exports__ = {};
/******/ 	__webpack_modules__["./js/helpers/turnQueryStringToObject.js"]();
/******/ 	
/******/ })()
;